{"title":"Example Post With Code","markdown":{"yaml":{"title":"Example Post With Code","description":"This is just another description in another blog-post\n","title-block-banner":true,"date":"2022-10-09","categories":["python","code","r"],"image":"image.jpg","draft":false,"jupyter":"python3"},"headingText":"This is an R Code","containsRefs":false,"markdown":"\n\n```{r}\n\nlibrary(tidyverse)\n\nmpg\nggplot(data = mpg) + \n  geom_point(mapping = aes(x = displ, y = hwy))\n\n``` \n\n## This is a python code\n\n\n```{python}\n\n#| label: fig-haha\n#| fig-cap: \"Example Scatterplot.\"\n#| code-fold: true\n\n\nimport altair as alt\nfrom vega_datasets import data\n\nsource = data.cars()\n\nbrush = alt.selection(type='interval', resolve='global')\n\nbase = alt.Chart(source).mark_point().encode(\n    y='Miles_per_Gallon',\n    color=alt.condition(brush, 'Origin', alt.ColorValue('gray')),\n).add_selection(\n    brush\n).properties(\n    width=250,\n    height=250\n)\n\nbase.encode(x='Horsepower') | base.encode(x='Acceleration')\n\n```\n\n## Another Python Code\n\n```{python}\n#| label: fig-tiles\n#| fig-cap: \"Example Barchart.\"\n#| code-fold: true\n\n\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ncategory_names = ['Strongly disagree', 'Disagree',\n                  'Neither agree nor disagree', 'Agree', 'Strongly agree']\nresults = {\n    'Question 1': [10, 15, 17, 32, 26],\n    'Question 2': [26, 22, 29, 10, 13],\n    'Question 3': [35, 37, 7, 2, 19],\n    'Question 4': [32, 11, 9, 15, 33],\n    'Question 5': [21, 29, 5, 5, 40],\n    'Question 6': [8, 19, 5, 30, 38]\n}\n\n\ndef survey(results, category_names):\n    \"\"\"\n    Parameters\n    ----------\n    results : dict\n        A mapping from question labels to a list of answers per category.\n        It is assumed all lists contain the same number of entries and that\n        it matches the length of *category_names*.\n    category_names : list of str\n        The category labels.\n    \"\"\"\n    labels = list(results.keys())\n    data = np.array(list(results.values()))\n    data_cum = data.cumsum(axis=1)\n    category_colors = plt.colormaps['RdYlGn'](\n        np.linspace(0.15, 0.85, data.shape[1]))\n\n    fig, ax = plt.subplots(figsize=(9.2, 5))\n    ax.invert_yaxis()\n    ax.xaxis.set_visible(False)\n    ax.set_xlim(0, np.sum(data, axis=1).max())\n\n    for i, (colname, color) in enumerate(zip(category_names, category_colors)):\n        widths = data[:, i]\n        starts = data_cum[:, i] - widths\n        rects = ax.barh(labels, widths, left=starts, height=0.5,\n                        label=colname, color=color)\n\n        r, g, b, _ = color\n        text_color = 'white' if r * g * b < 0.5 else 'darkgrey'\n        ax.bar_label(rects, label_type='center', color=text_color)\n    ax.legend(ncol=len(category_names), bbox_to_anchor=(0, 1),\n              loc='lower left', fontsize='small')\n\n    return fig, ax\n\n\nsurvey(results, category_names)\nplt.show()\n```\n\nEnd of the example"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"message":true,"engine":"jupyter"},"render":{"keep-tex":false,"keep-yaml":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":true,"code-line-numbers":true,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../litera-v2.scss"],"highlight-style":"eiffel","reference-location":"margin","toc":true,"output-file":"index.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.1.251","theme":"../../litera-v2.scss","anchor-sections":true,"fig-cap-location":"bottom","footnotes-hover":true,"citation":true,"citation-location":"margin","comments":{"utterances":{"repo":"ariewjy/quarto-blog"}},"title-block-banner":true,"license":"CC BY","toc-title":"Table of contents","toc-location":"right","author":[{"name":"Aditya Arie Wijaya","url":"ariewjy.github.io/quarto-blog"}],"page-layout":"article","title":"Example Post With Code","description":"This is just another description in another blog-post\n","date":"2022-10-09","categories":["python","code","r"],"image":"image.jpg","draft":false,"jupyter":"python3"},"extensions":{"book":{"multiFile":true}}}}}